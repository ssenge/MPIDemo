---
- hosts: all
  become: yes
  tasks:

    - name: Wait for SSH to be available
      wait_for:
        port: 22
        timeout: 180
        state: started
      delegate_to: "{{ inventory_hostname }}"

    - name: Install necessary dependencies
      yum:
        name:
          - wget
          - tar
          - git
          - htop
          - mpich
        state: present

    - name: Download Julia
      get_url:
        url: "https://julialang-s3.julialang.org/bin/linux/x64/1.10/julia-1.10.4-linux-x86_64.tar.gz"
        dest: /tmp/julia.tar.gz

    - name: Extract Julia
      unarchive:
        src: /tmp/julia.tar.gz
        dest: /opt/
        remote_src: yes

    - name: Create symlink for Julia
      file:
        src: /opt/julia-1.10.4/bin/julia
        dest: /usr/local/bin/julia
        state: link

    - name: Clone Git repo
      git:
        repo: 'https://github.com/ssenge/MPIDemo.git'
        dest: /home/ec2-user/MPIDemo
      become: false

    - name: Set env variable to reduce Julia precompilation memory usage 
      command: echo $JULIA_NUM_PRECOMPILE_TASKS
      environment:
        JULIA_NUM_PRECOMPILE_TASKS: 1
      become: false
      
    - name: Install Julia project dependencies
      ansible.builtin.shell: |
        julia --project -e 'using Pkg; Pkg.instantiate()'  >> /home/ec2-user/MPIDemo/julia-deps-output-inst.log
        julia --project -e 'using MPI; MPI.install_mpiexecjl()' >> /home/ec2-user/MPIDemo/julia-deps-output-mpi.log
    #    touch iwashere.txt
      args:
        chdir: /home/ec2-user/MPIDemo
      register: output
      failed_when: "'ERROR' in output.stderr"
      become: false

    #- name: Save the command output to a file on the remote host
    #  ansible.builtin.copy:
    #    content: "{{ output.stdout }}"
    #   dest: /home/ec2-user/MPIDemo/julia-deps-output.log
    
    - name: Create log dir
      file:
        path: /home/ec2-user/MPIDemo/logs
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'
